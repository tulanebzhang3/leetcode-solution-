728. Self Dividing Numbers
A self-dividing number is a number that is divisible by every digit it contains.  For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.  Also, a self-dividing number is not allowed to contain the digit zero.  Given a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.

#1 just use for to get every digit, it is very easy

class Solution:
    def selfDividingNumbers(self, left: int, right: int) -> List[int]:
        listA = []
        for i in range (left, right+1):
            if self.divided(i):
                listA.append(i)
        return listA
    
    def divided(self, a):
        for i in str(a):
            if i == '0' or a % int(i) !=0:
                return False
        return True
