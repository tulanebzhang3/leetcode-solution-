509. Fibonacci Number
The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,  F(0) = 0,   F(1) = 1 F(N) = F(N - 1) + F(N - 2), for N > 1. Given N, calculate F(N).
#1 recursive solution
class Solution:
    def fib(self, N: int) -> int:
        if N ==0:
            return 0
        if N ==1:
            return 1
        return self.fib(N-1) +self.fib(N-2)

#2 class Solution:
    def fib(self, N: int) -> int:
        if N==0:
            return 0
        if N==1:
            return 1
        arr = [0]*(N+1)
        arr[0]=0
        arr[1] =1
        for i in range(2,N+1):
            arr[i] = arr[i-2]+ arr[i-1]
        return arr[N]

#golden ratio
class Solution:
  def fib(self, N):
  	golden_ratio = (1 + 5 ** 0.5) / 2
  	return int((golden_ratio ** N + 1) / 5 ** 0.5)
