944. Delete Columns to Make Sorted
We are given an array A of N lowercase letter strings, all of the same length.  Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.
Suppose we chose a set of deletion indices D such that after deletions, each remaining column in A is in non-decreasing sorted order.  Return the minimum possible value of D.length.

#1 just count the number of array is not sorted, if it is not a non-decreased sort, there must have a A[I]>a[I+1]
class Solution:
    def minDeletionSize(self, A: List[str]) -> int:
        n = len(A[0])
        count = 0
        for i in range (n):
            for j in range(len(A)-1):
                if ord(A[j][i])> ord(A[j+1][i]):
                    count+=1
                    break;
        return count

#2 use zip method
class Solution(object):
    def minDeletionSize(self, A):
        ans = 0
        for col in zip(*A):
            if any(col[i] > col[i+1] for i in range(len(col) - 1)):
                ans += 1
        return ans
